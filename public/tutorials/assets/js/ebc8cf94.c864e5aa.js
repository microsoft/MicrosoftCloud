"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[688],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),h=i,m=d["".concat(l,".").concat(h)]||d[h]||c[h]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4678:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const a={title:"3. Changing [...nextauth].ts file",sidebar_position:1},o=void 0,s={unversionedId:"Take-A-Break-Reminder-App/Changing-NextauthTs-File",id:"Take-A-Break-Reminder-App/Changing-NextauthTs-File",title:"3. Changing [...nextauth].ts file",description:"We will need to make important changes to the [...nextauth].ts file so that we can authorize the user with some permissions related to Microsoft Graph.",source:"@site/docs/Take-A-Break-Reminder-App/03-Changing-NextauthTs-File.md",sourceDirName:"Take-A-Break-Reminder-App",slug:"/Take-A-Break-Reminder-App/Changing-NextauthTs-File",permalink:"/MicrosoftCloud/tutorials/docs/Take-A-Break-Reminder-App/Changing-NextauthTs-File",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"3. Changing [...nextauth].ts file",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"2. Installing dependencies from the Kit Get Started",permalink:"/MicrosoftCloud/tutorials/docs/Take-A-Break-Reminder-App/Installing-Dependencies-From-Kit-Get-Started"},next:{title:"4. Developing the GetPresence API",permalink:"/MicrosoftCloud/tutorials/docs/Take-A-Break-Reminder-App/Developing-Get-Presence-API"}},l={},u=[],p={toc:u};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"We will need to make important changes to the ",(0,i.kt)("inlineCode",{parentName:"p"},"[...nextauth].ts")," file so that we can authorize the user with some permissions related to Microsoft Graph."),(0,i.kt)("p",null,"To do this, we need to make the following changes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pages/api/auth/[...nextauth].ts"),":")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("b",null,"api/auth/[...nextauth].ts")),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import NextAuth, { NextAuthOptions } from \"next-auth\";\nimport AzureADProvider from 'next-auth/providers/azure-ad';\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    AzureADProvider({\n      clientId: process.env.AZURE_AD_CLIENT_ID,\n      clientSecret: process.env.AZURE_AD_CLIENT_SECRET,\n      tenantId: process.env.AZURE_AD_TENANT_ID,\n      authorization: {\n        params: {\n          scope: 'openid profile email offline_access Presence.Read'\n        }\n      }\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, account }) {\n      // Persist the OAuth access_token to the right token after signin\n      if (account) {\n        token.accessToken = account.access_token;\n        token.refreshToken = account.refresh_token;\n      }\n\n      return token;\n    }\n  }\n}\n\nexport default NextAuth(authOptions);\n"))),(0,i.kt)("br",null),(0,i.kt)("p",null,"Let's understand what we included in this file:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clientId"),": is the client ID you obtained when you registered your app in Azure Active Directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"clientSecret"),": is the client secret you obtained when you registered your app in Azure Active Directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tenantId")," is the ID of the Azure Active Directory (tenant) directory you want to use to authenticate users.")),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"authorization")," object, we are requesting the following permissions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"openid"),": is a scope value that is required to request an ID token from Azure Active Directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"profile"),": is a scope value that is required to request the basic profile of a signed-in user from Azure Active Directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"email"),": is a scope value that is required to request the email address of a signed-in user from Azure Active Directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"offline_access"),": is a scope value that is required to request a refresh token from Azure Active Directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Presence.Read"),": is a scope value that is required to request the presence of a signed-in user from Microsoft Graph.")),(0,i.kt)("p",null,"And in the ",(0,i.kt)("inlineCode",{parentName:"p"},"callbacks")," object, we are persisting the ",(0,i.kt)("inlineCode",{parentName:"p"},"access_token")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"refresh_token")," to the right token after signin. This is necessary because the ",(0,i.kt)("inlineCode",{parentName:"p"},"access_token")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"refresh_token")," are not persisted by default."),(0,i.kt)("p",null,"This will be the only one change we will make in this file. However, we need to make the ",(0,i.kt)("inlineCode",{parentName:"p"},"Client")," from the Microsoft Graph SDK. But, let's make this change in the next session."))}c.isMDXComponent=!0}}]);